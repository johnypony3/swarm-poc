version: '3'

services:
  app:
    container_name: app
    image: johnypony3/avisare-app:latest
    depends_on:
      - "mysql"
      - "redis"
      - "mongodb"
      - "elasticsearch"
      - "rabbitmq"
      - "portainer"
    ports:
      - "80:10010"
    environment:
      NODE_ENV: "production"
      MYSQLHOST: "mysql"
      MYSQLDB: "avisare"
      MYSQLU: "root"
      MYSQLP: "12341234"
      MYSQLPORT: "3306"
      BASEPATH: "https://localhost"
      REDISHOST: "redis"
      ELASTICHOST: "elasticsearch"
      ELASTICPORT: "9200"
      MONGOHOST: "mongodb"
      MONGOPORT: "27017"
      MONGODB: "avisare"
    networks:
      - theemm
#    volumes:
#      - ./env:/avisare/env
#    build:
#      dockerfile: Dockerfile
#      context: .

  mysql:
    container_name: mysql
    image: mysql:latest
    #build:
    #  dockerfile: Dockerfile-johnypony3-mysql-5-7
    #  context: .
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "avisare"
      MYSQL_ROOT_PASSWORD: "12341234"
      MYSQL_ROOT_HOST: "%"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- /home/ubuntu/docker/docker-data/mysql:/datadir/mysql
      - /home/ubuntu/docker/docker-config/mysql/config:/etc/mysql
      - /home/ubuntu/docker/docker-config/mysql/import:/docker-entrypoint-initdb.d
    networks:
      - theemm

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - theemm

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - theemm

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:2
    ports:
    - "9200:9200"
    - "9300:9300"
    networks:
      - theemm

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
     - "5672:5672"
     - "5671:5671"
     - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: avisare
      RABBITMQ_DEFAULT_PASS: avisare
    networks:
      - theemm

  portainer:
    container_name: portainer
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- swarm-docker-data-portainer:/data
    networks:
      - theemm
    ports:
      - "9000:9000"
    #command: ["--no-auth"]

#volumes:
#  swarm-docker-data-portainer:
#    external: true

networks:
  theemm:
    driver: bridge
